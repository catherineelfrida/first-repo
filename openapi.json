{
  "openapi": "3.0.0",
  "info": {
    "title": "Banking API",
    "version": "1.0.0",
    "description": "API documentation for a basic banking system"
  },
  "tags": [
    {
      "name": "customer",
      "description": "Operations related to customer"
    },
    {
      "name": "auth",
      "description": "Operations related to authentication"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Get a list of users",
        "description": "Retrieve a list of users with optional search parameters, pagination, and limits.",
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search term for filtering users (optional)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination (default is 1)",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page (default is 10)",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponse"
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customer"
        ],
        "summary": "Create a new user",
        "description": "Endpoint to create a new user with authentication.",
        "operationId": "createUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "User data to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Email already registered"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Get user by ID",
        "description": "Retrieve user details by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customer"
        ],
        "summary": "Delete a user by ID",
        "description": "Endpoint to delete a user by ID.",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "User login",
        "description": "Endpoint for user authentication and login.",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "diaz@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success!"
                    },
                    "message": {
                      "type": "string",
                      "example": "Berhasil Login!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "User registration",
        "description": "Endpoint for user registration.",
        "operationId": "registerUser",
        "requestBody": {
          "description": "User registration details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "userpassword"
                  },
                  "nama": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "alamat": {
                    "type": "string",
                    "example": "123 Main St"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success!"
                    },
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Berhasil Register"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/authenticate": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get authenticated user details",
        "description": "Retrieve details of the authenticated user.",
        "operationId": "getAuthenticatedUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success!"
                    },
                    "message": {
                      "type": "string",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Success!"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Success!"
          },
          "data": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UserCreateRequest": {
        "type": "object",
        "properties": {
          "nama": {
            "type": "string",
            "example": "Diaz"
          },
          "alamat": {
            "type": "string",
            "example": "Jl. Nasabah 1"
          },
          "email": {
            "type": "string",
            "example": "diaz@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "required": [
          "nama",
          "alamat",
          "email",
          "password"
        ]
      },
      "UserCreateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "Success add new customer!"
          },
          "data": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "nama": {
            "type": "string"
          },
          "alamat": {
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          }
        },
        "example": {
          "id": 1,
          "email": "diaz@gmail.com",
          "password": "password123",
          "nama": "Diaz",
          "alamat": "Jl. Nasabah 1",
          "accounts": [
            {
              "id": 1,
              "nasabahid": 1,
              "accnumber": 12345,
              "jenis": "Tabungan",
              "saldo": 500
            }
          ]
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nasabahid": {
            "type": "integer",
            "format": "int64"
          },
          "accnumber": {
            "type": "integer"
          },
          "jenis": {
            "type": "string"
          },
          "saldo": {
            "type": "number"
          },
          "transactionsFrom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "transactionsTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "customer": {
            "$ref": "#/components/schemas/User"
          }
        },
        "example": {
          "id": 1,
          "nasabahid": 1,
          "accnumber": 12345,
          "jenis": "Tabungan",
          "saldo": 500,
          "transactionsFrom": [],
          "transactionsTo": [],
          "customer": {
            "id": 1,
            "email": "diaz@gmail.com",
            "password": "password123",
            "nama": "Diaz",
            "alamat": "Jl. Nasabah 1"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "srcacc": {
            "type": "integer",
            "format": "int64"
          },
          "destacc": {
            "type": "integer",
            "format": "int64"
          },
          "transactiontype": {
            "type": "string"
          },
          "jumlah": {
            "type": "number"
          },
          "srcnumber": {
            "$ref": "#/components/schemas/Account"
          },
          "destnumber": {
            "$ref": "#/components/schemas/Account"
          }
        },
        "example": {
          "id": 1,
          "srcacc": 12345,
          "destacc": 67890,
          "transactiontype": "transfer",
          "jumlah": 100,
          "srcnumber": {
            "id": 1,
            "nasabahid": 1,
            "accnumber": 12345,
            "jenis": "Tabungan",
            "saldo": 500,
            "transactionsFrom": [],
            "transactionsTo": [],
            "customer": {
              "id": 1,
              "email": "diaz@gmail.com",
              "password": "password123",
              "nama": "Diaz",
              "alamat": "Jl. Nasabah 1"
            }
          },
          "destnumber": {
            "id": 2,
            "nasabahid": 2,
            "accnumber": 67890,
            "jenis": "Tabungan",
            "saldo": 700,
            "transactionsFrom": [],
            "transactionsTo": [],
            "customer": {
              "id": 2,
              "email": "theo@gmail.com",
              "password": "password123",
              "nama": "Theo",
              "alamat": "Jl. Nasabah 2"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failed"
          },
          "code": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Bad request! Id is required"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
